debug.srp created srp.log for error report...
runtime exception handler called
exception is: [31;49mglobal variable is unbound - f[39;49m
frame variables: {}
frame pc: 1
frame method: <immediate command 0>
frame class: nil

Debugger invoked.
-----------------------------------------------------
Method [32;49m<global>[39;49m in class [34;49mnil[39;49m
-----------------------------------------------------
Method [32;49m<callin_method>[39;49m in class [34;49mnil[39;49m
-----------------------------------------------------
Method [32;49m<immediate command 0>[39;49m in class [34;49mnil[39;49m, char 41 in <stdin>
[31;49mglobal variable is unbound - f[39;49m
1> debugger reads 

? - stack trace
<id> - print variable value
* - print all variables
+ - up one level (to caller)
- - down one level (to callee)
=<expr> - evaluate expression
! - exit
> - resume execution
1> debugger reads 

? - stack trace
<id> - print variable value
* - print all variables
+ - up one level (to caller)
- - down one level (to callee)
=<expr> - evaluate expression
! - exit
> - resume execution
1> debugger reads 

? - stack trace
<id> - print variable value
* - print all variables
+ - up one level (to caller)
- - down one level (to callee)
=<expr> - evaluate expression
! - exit
> - resume execution
1> debugger reads 

? - stack trace
<id> - print variable value
* - print all variables
+ - up one level (to caller)
- - down one level (to callee)
=<expr> - evaluate expression
! - exit
> - resume execution
1> debugger reads 

? - stack trace
<id> - print variable value
* - print all variables
+ - up one level (to caller)
- - down one level (to callee)
=<expr> - evaluate expression
! - exit
> - resume execution
1> debugger reads 

? - stack trace
<id> - print variable value
* - print all variables
+ - up one level (to caller)
- - down one level (to callee)
=<expr> - evaluate expression
! - exit
> - resume execution
1> debugger reads >
Resume execution...
-> nil
65
-> nil
-> nil
